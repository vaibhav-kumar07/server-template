{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Railway Khata API",
        "description": "Railway API for Khata (Admin and Owner)"
    },
    "servers": [
        {
            "url": "https://khata-backend-production.up.railway.app/api",
            "description": "Railway API for Khata"
        },
        {
            "url": "http://localhost:6001/api",
            "description": "Local Host API for Khata"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "API for Authentication in Khata"
        },
        {
            "name": "Admin-Party",
            "description": "API for Admin Party in Khata"
        },
        {
            "name": "Admin-Project",
            "description": "API for Admin Project in Khata"
        },
        {
            "name": "Admin-Store",
            "description": "API for Admin Store in Khata"
        },
        {
            "name": "Owner-Party",
            "description": "API for Owner Party in Khata"
        },
        {
            "name": "Owner-Project",
            "description": "API for Owner Project in Khata"
        },
        {
            "name": "Owner-Store",
            "description": "API for Owner Store in Khata"
        },
        {
            "name": "Owner-User",
            "description": "API for Owner User in Khata"
        },
        {
            "name": "Owner-Transaction",
            "description": "API for Owner Transaction in Khata"
        },
        {
            "name": "Accounant-Transaction",
            "description": "API for Admin Transaction in Khata"
        },
        {
            "name": "Accountant-Party",
            "description": "API for Accountant Party in Khata"
        },
        {
            "name": "Accountant-Project",
            "description": "API for Accountant Project in Khata"
        },
        {
            "name": "Accountant-Store",
            "description": "API for Accountant Store in Khata"
        },
        {
            "name": "Accountant-User",
            "description": "API for Accountant User in Khata"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/admin/users/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login a user",
                "description": "Login a user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Error in login",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/parties": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Admin-Party"
                ],
                "summary": "Get all parties (Admin)",
                "description": "Get all parties for the admin",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "$operator": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "for filtering replace the additionalProp, $operator, string  by fieldName, $operator, value respectively"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort by a field in the format 'fieldName:asc' or 'fieldName:desc'"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search by text in all fields"
                    },
                    {
                        "name": "pagination[page]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "pagination[pageSize]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching parties",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Admin-Party"
                ],
                "summary": "Create a party (Admin)",
                "description": "Create a new party for the admin",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/CreatePartyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Error in creating party",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/parties/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Admin-Party"
                ],
                "summary": "Get a party (Admin)",
                "description": "Get a specific party for the admin by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of party to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching party",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Admin-Party"
                ],
                "summary": "Update a party (Admin)",
                "description": "Update a specific party for the admin by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of party to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/EditPartyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in updating party",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/projects": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Admin-Project"
                ],
                "summary": "Get all projects (Admin)",
                "description": "Get all projects for the admin",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "$operator": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "for filtering replace the additionalProp, $operator, string  by fieldName, $operator, value respectively"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort by a field in the format 'fieldName:asc' or 'fieldName:desc'"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search by text in all fields"
                    },
                    {
                        "name": "pagination[page]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "pagination[pageSize]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching projects",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Admin-Project"
                ],
                "summary": "Create a project (Admin)",
                "description": "Create a new project for the admin",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/CreateProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Error in creating project",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/projects/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Admin-Project"
                ],
                "summary": "Get a project (Admin)",
                "description": "Get a specific project for the admin by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of project to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching project",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Admin-Project"
                ],
                "summary": "Update a project (Admin)",
                "description": "Update a specific project for the admin by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of project to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/EditProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in updating project",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/projects/{id}/status": {
            "patch": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Admin-Project"
                ],
                "summary": "Update a project status (Admin)",
                "description": "Update a project status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of project to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ChangeStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in updating project status",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/parties": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-Party"
                ],
                "summary": "Get all parties (Owner)",
                "description": "Get all parties for the owner",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "$operator": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "for filtering replace the additionalProp, $operator, string  by fieldName, $operator, value respectively"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort by a field in the format 'fieldName:asc' or 'fieldName:desc'"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search by text in all fields"
                    },
                    {
                        "name": "pagination[page]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "pagination[pageSize]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching parties",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-Party"
                ],
                "summary": "Create a party (Owner)",
                "description": "Create a new party for the owner",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/CreatePartyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Error in creating party",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/parties/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-Party"
                ],
                "summary": "Get a party (Owner)",
                "description": "Get a specific party for the owner by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of party to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching party",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-Party"
                ],
                "summary": "Update a party (Owner)",
                "description": "Update a specific party for the owner by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of party to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/EditPartyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in updating party",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/parties/{id}/status": {
            "patch": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-Party"
                ],
                "summary": "Update a party status (Owner)",
                "description": "Update a party status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of party to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ChangeStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in updating party status",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/projects": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-Project"
                ],
                "summary": "Get all projects (Owner)",
                "description": "Get all projects for the owner",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "$operator": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "for filtering replace the additionalProp, $operator, string  by fieldName, $operator, value respectively"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort by a field in the format 'fieldName:asc' or 'fieldName:desc'"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search by text in all fields"
                    },
                    {
                        "name": "pagination[page]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "pagination[pageSize]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching projects",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-Project"
                ],
                "summary": "Create a project (Owner)",
                "description": "Create a new project for the owner",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/CreateProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Error in creating project",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/projects/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-Project"
                ],
                "summary": "Get a project (Owner)",
                "description": "Get a specific project for the owner by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of project to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching project",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-Project"
                ],
                "summary": "Update a project (Owner)",
                "description": "Update a specific project for the owner by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of project to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/EditProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in updating project",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/projects/{id}/status": {
            "patch": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-Project"
                ],
                "summary": "Update a project status (Owner)",
                "description": "Update a project status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of project to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ChangeStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in updating project status",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/stores": {
            "get": {
                "tags": [
                    "Admin-Store"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all stores",
                "description": "Get all stores",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "$operator": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "for filtering replace the additionalProp, $operator, string  by fieldName, $operator, value respectively"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort by a field in the format 'fieldName:asc' or 'fieldName:desc'"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search by text in all fields"
                    },
                    {
                        "name": "pagination[page]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "pagination[pageSize]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching stores",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin-Store"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Create a store",
                "description": "Create a store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/CreateStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Error in creating store",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/stores/{id}": {
            "get": {
                "tags": [
                    "Admin-Store"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get a store",
                "description": "Get a store",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of store to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching store",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/stores": {
            "get": {
                "tags": [
                    "Owner-Store"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all stores",
                "description": "Get all stores",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "$operator": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "for filtering replace the additionalProp, $operator, string  by fieldName, $operator, value respectively"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort by a field in the format 'fieldName:asc' or 'fieldName:desc'"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search by text in all fields"
                    },
                    {
                        "name": "pagination[page]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "pagination[pageSize]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching stores",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Owner-Store"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Create a store",
                "description": "Create a store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/CreateStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Error in creating store",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/stores/{id}": {
            "get": {
                "tags": [
                    "Owner-Store"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get a store",
                "description": "Get a store",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of store to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching store",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/stores/{id}/status": {
            "patch": {
                "tags": [
                    "Owner-Store"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Update a store status (Owner)",
                "description": "Update a store status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of store to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ChangeStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in updating store status",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/stores/{id}/balance": {
            "patch": {
                "tags": [
                    "Owner-Store"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Update a store balance (Owner)",
                "description": "Update a store balance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of store to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "current_balance": {
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "current_balance"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in updating store balance",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/stores/{id}/keeper": {
            "patch": {
                "tags": [
                    "Owner-Store"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Update a store keeper (Owner)",
                "description": "Update a store keeper",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of store to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ChangeStoreKeeperRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in updating store keeper",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Admin-User"
                ],
                "summary": "Get all users (Admin)",
                "description": "Get all users for the admin",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "$operator": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "for filtering replace the additionalProp, $operator, string  by fieldName, $operator, value respectively"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort by a field in the format 'fieldName:asc' or 'fieldName:desc'"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search by text in all fields"
                    },
                    {
                        "name": "pagination[page]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "pagination[pageSize]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching users",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Admin-User"
                ],
                "summary": "Create a user (Admin)",
                "description": "Create a new user for the admin",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/CreateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Error in creating user",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Admin-User"
                ],
                "summary": "Get a user (Admin)",
                "description": "Get a specific user for the admin by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching user",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/users": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-User"
                ],
                "summary": "Get all users (Owner)",
                "description": "Get all users for the owner",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "$operator": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "for filtering replace the additionalProp, $operator, string  by fieldName, $operator, value respectively"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort by a field in the format 'fieldName:asc' or 'fieldName:desc'"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search by text in all fields"
                    },
                    {
                        "name": "pagination[page]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "pagination[pageSize]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching users",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-User"
                ],
                "description": "Create a new user by the owner",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/CreateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Error in creating user",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/users/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-User"
                ],
                "summary": "Get a user (Owner)",
                "description": "Get a specific user for the owner by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching user",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/users/{id}/status": {
            "patch": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-User"
                ],
                "summary": "Update a user status (Owner)",
                "description": "Update a user status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ChangeStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in updating user status",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/transactions": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-Transaction"
                ],
                "summary": "Get all transactions",
                "description": "Get all transactions",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "$operator": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "for filtering replace the additionalProp, $operator, string  by fieldName, $operator, value respectively"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort by a field in the format 'fieldName:asc' or 'fieldName:desc'"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search by text in all fields"
                    },
                    {
                        "name": "pagination[page]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "pagination[pageSize]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching transactions",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Owner-Transaction"
                ],
                "summary": "Create a transaction",
                "description": "Create a transaction",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "number"
                                    },
                                    "payment_mode": {
                                        "type": "string"
                                    },
                                    "transaction_type": {
                                        "type": "string"
                                    },
                                    "project": {
                                        "type": "string"
                                    },
                                    "party": {
                                        "type": "string"
                                    },
                                    "store": {
                                        "type": "string"
                                    },
                                    "notes": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "amount",
                                    "payment_mode",
                                    "transaction_type",
                                    "project",
                                    "party",
                                    "store"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Error in creating transaction",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/transactions/{id}": {
            "get": {
                "tags": [
                    "Owner-Transaction"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get a transaction",
                "description": "Get a transaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of transaction to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching transaction",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Owner-Transaction"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Delete a transaction",
                "description": "Delete a transaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of transaction to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in deleting transaction",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/transactions/{id}/approve": {
            "patch": {
                "tags": [
                    "Owner-Transaction"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Approve a transaction",
                "description": "Approve a transaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of transaction to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in updating transaction",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/transactions/excel": {
            "get": {
                "tags": [
                    "Owner-Transaction"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all transactions in excel",
                "description": "Get all transactions in excel",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "$operator": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "for filtering replace the additionalProp, $operator, string  by fieldName, $operator, value respectively"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort by a field in the format 'fieldName:asc' or 'fieldName:desc'"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search by text in all fields"
                    },
                    {
                        "name": "pagination[page]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "pagination[pageSize]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Error in fetching transactions",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owner/transactions/excel/template": {
            "get": {
                "tags": [
                    "Owner-Transaction"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get excel template to upload transactions",
                "description": "Get excel template to upload transactions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Error in fetching transactions",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accountant/transactions": {
            "get": {
                "tags": [
                    "Accountant-Transaction"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all transactions",
                "description": "Get all transactions",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "$operator": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "for filtering replace the additionalProp, $operator, string  by fieldName, $operator, value respectively"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort by a field in the format 'fieldName:asc' or 'fieldName:desc'"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search by text in all fields"
                    },
                    {
                        "name": "pagination[page]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "pagination[pageSize]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching transactions",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Accountant-Transaction"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Create a transaction",
                "description": "Create a transaction",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "number"
                                    },
                                    "payment_mode": {
                                        "type": "string"
                                    },
                                    "transaction_type": {
                                        "type": "string"
                                    },
                                    "project": {
                                        "type": "string"
                                    },
                                    "party": {
                                        "type": "string"
                                    },
                                    "store": {
                                        "type": "string"
                                    },
                                    "notes": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "amount",
                                    "payment_mode",
                                    "transaction_type",
                                    "project",
                                    "party",
                                    "store"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/accounant/transactions/excel": {
            "get": {
                "tags": [
                    "Accountant-Transaction"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all transactions in excel",
                "description": "Get all transactions in excel",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "$operator": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "for filtering replace the additionalProp, $operator, string  by fieldName, $operator, value respectively"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort by a field in the format 'fieldName:asc' or 'fieldName:desc'"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search by text in all fields"
                    },
                    {
                        "name": "pagination[page]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "pagination[pageSize]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Error in fetching transactions",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accountant/transactions/{id}": {
            "get": {
                "tags": [
                    "Accountant-Transaction"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get a transaction",
                "description": "Get a transaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of transaction to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Error in creating transaction",
                            "schema": {
                                "$ref": "#/definitions/ErrorResponse"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Accountant-Transaction"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Delete a transaction",
                "description": "Delete a transaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of transaction to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Error in creating transaction",
                            "schema": {
                                "$ref": "#/definitions/ErrorResponse"
                            }
                        }
                    }
                }
            }
        },
        "/accountant/stores": {
            "get": {
                "tags": [
                    "Accountant-Store"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all stores",
                "description": "Get all stores",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "$operator": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "for filtering replace the additionalProp, $operator, string  by fieldName, $operator, value respectively"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort by a field in the format 'fieldName:asc' or 'fieldName:desc'"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search by text in all fields"
                    },
                    {
                        "name": "pagination[page]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "pagination[pageSize]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching stores",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounant/stores/{id}": {
            "get": {
                "tags": [
                    "Accountant-Store"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get a store",
                "description": "Get a store",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of store to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching store",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accountant/parties": {
            "get": {
                "tags": [
                    "Accountant-Party"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all parties",
                "description": "Get all parties",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "$operator": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "for filtering replace the additionalProp, $operator, string  by fieldName, $operator, value respectively"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort by a field in the format 'fieldName:asc' or 'fieldName:desc'"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search by text in all fields"
                    },
                    {
                        "name": "pagination[page]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "pagination[pageSize]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching parties",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accountant/parties/{id}": {
            "get": {
                "tags": [
                    "Accountant-Party"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get a party",
                "description": "Get a party",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of party to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching party",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "accounant/projects": {
            "get": {
                "tags": [
                    "Accountant-Project"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get all projects",
                "description": "Get all projects",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "$operator": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "for filtering replace the additionalProp, $operator, string  by fieldName, $operator, value respectively"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort by a field in the format 'fieldName:asc' or 'fieldName:desc'"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search by text in all fields"
                    },
                    {
                        "name": "pagination[page]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "pagination[pageSize]",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching projects",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accountant/projects/{id}": {
            "get": {
                "tags": [
                    "Accountant-Project"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Get a project",
                "description": "Get a project",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of project to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Error in fetching project",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "apiKey",
                "name": "Authorization",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "in": "header"
            }
        }
    },
    "definitions": {
        "SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "ChangeStatusRequest": {
            "required": [
                "is_active"
            ],
            "properties": {
                "is_active": {
                    "type": "boolean"
                }
            }
        },
        "CreatePartyRequest": {
            "type": "object",
            "required": [
                "name",
                "code",
                "contact_person",
                "contact_number"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "contact_person": {
                    "type": "string"
                },
                "contact_number": {
                    "type": "string"
                }
            }
        },
        "EditPartyRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "contact_person": {
                    "type": "string"
                },
                "contact_number": {
                    "type": "string"
                }
            }
        },
        "CreateProjectRequest": {
            "type": "object",
            "required": [
                "name",
                "code"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "EditProjectRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "CreateStoreRequest": {
            "required": [
                "code",
                "location",
                "initial_balance",
                "keeper_code"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "initial_balance": {
                    "type": "number"
                },
                "keeper_code": {
                    "type": "string"
                }
            }
        },
        "EditStoreRequest": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "keeper_code": {
                    "type": "string"
                }
            }
        },
        "ChangeStoreStatusRequest": {
            "required": [
                "is_active"
            ],
            "properties": {
                "is_active": {
                    "type": "boolean"
                }
            }
        },
        "ChangeStoreKeeperRequest": {
            "required": [
                "keeper_code"
            ],
            "properties": {
                "keeper_code": {
                    "type": "string"
                }
            }
        },
        "CreateUserRequest": {
            "type": "object",
            "required": [
                "code",
                "name",
                "email",
                "role"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "LoginRequest": {
            "type": "object",
            "required": [
                "code",
                "pin"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                }
            }
        }
    }
}